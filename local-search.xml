<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>AI编程</title>
    <link href="/2025/06/28/AI%E7%BC%96%E7%A8%8B/"/>
    <url>/2025/06/28/AI%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>Cursor</tag>
      
      <tag>AI编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>借助消息中间件进行柔性分布式事务的实现</title>
    <link href="/2025/03/08/%E5%80%9F%E5%8A%A9%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%9F%94%E6%80%A7%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <url>/2025/03/08/%E5%80%9F%E5%8A%A9%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%9F%94%E6%80%A7%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<hr><h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><blockquote><p>由于旧系统是基于nodejs进行业务代码编写且系统与系统之间的关联过于耦合，部分功能对业务交互不够友好、数据交互不够清晰，因此对功能进行重构迁移。</p></blockquote><p>现分析已有现状点如下：</p><ol><li>由于技术选型过于久远，数据存储类型选择了MongoDB版本为1.xxx，且不支持事务</li><li>目前Nodejs数据更新只有单条数据更新接口，且是以更新时间为版本做乐观锁机制更新，如果操作成功，nodejs会返回完整的更新数据</li><li>旧系统功能不完全舍弃，关闭在nodejs端对数据维护入口，迁移到Java体系进行数据维护时还要对Mongo数据进行维护，即双写一致</li></ol><h3 id="实现一"><a href="#实现一" class="headerlink" title="实现一"></a>实现一</h3><p>利用消息中间件的<strong>异步（不干扰业务流程）</strong>、<strong>消息可靠性</strong>对执行失败时已进行数据更新的mongo数据进行数据回滚，如果回退失败则进行<strong>告警</strong>、并进行<strong>人工数据补偿</strong>。具体实现流程图如下：<br><img src="/img/%E5%80%9F%E5%8A%A9%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%9F%94%E6%80%A7%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/done_1.png"></p><p>如上所示在跨数据库类型上的分布式事务处理上，借助消息中间件进行柔性处理，其中主要依赖于消息中间件的异步、可靠性消息特性进行数据回滚，当回滚失败时则采用人工进行干扰处理。</p><h3 id="实现二"><a href="#实现二" class="headerlink" title="实现二"></a>实现二</h3><p>在现有的场景中，多条数据的更新是采用循环调用nodejs接口进行数据更新，虽然nodejs借助了Feign进行重试兜底不需要考虑网络问题，但在多次Feign的调用下，整个接口响应速度并不理想（至少在800ms以上）。<br>其次是MySQL的执行顺序，必须确保nodejs所在的Feign调用成功才能进行数据操作，最后再根据操作结果再决定是否提交事务，异常了还需要回滚更新成功的Mongo数据。如果在Java端增加了其他业务性操作，比如价格更新的下沉，比如修改类目价格，连带修改到类目下的sku价格，执行失败时则发起MQ进行回滚。<br>如果对于Mongo数据的更新可以借助MQ进行异步，并将回滚的策略交于消费者自行处理，这种方式将促进Java端业务代码的高内聚，后续如果旧功能不再维护Mongo则只需要注释掉发送MQ相关代码即可<br><img src="/img/%E5%80%9F%E5%8A%A9%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%9F%94%E6%80%A7%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/done_2.png"></p><p>如上所示，事务的提交在MQ消息发送成功后才执行的操作，Mongo数据的变更交由消息消费者处理。<br>在这个上示流程中，如果有其他Java项目进行交互：<br>则可以在流程中（即粉色事务范围内）进行Feign调用（不能导致长事务），Feign调用成功了 + 消息发送成功则提交事务。如果Feign调用失败则另写方法回滚数据，数据的回滚则可用乐观锁机制进行回滚。<br>或者（非强一致性、实时性比较低）发送MQ消息对其他逻辑进行处理，异常的处理与回滚失败则交由对应的消费者进行处理</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="一-对于分布式事务的处理，要从以下方面进行考虑："><a href="#一-对于分布式事务的处理，要从以下方面进行考虑：" class="headerlink" title="一. 对于分布式事务的处理，要从以下方面进行考虑："></a>一. 对于分布式事务的处理，要从以下方面进行考虑：</h4><ul><li>并发下正确数据的保证</li><li>避免长事务</li><li>异常处理策略</li><li>回退失败的兜底</li><li>节点宕机的处理</li><li>考虑负载均衡</li><li>网络延迟等等</li></ul><p>在本次面对的场景中，我只考虑事务【异常处理】、NodeJs更新失败或者MySQL更新失败时对已更新的Mongo数据进行数据回滚，在Mongo数据回滚失败则用【人工进行数据修复】</p><p>未实现：节点宕机的处理、考虑负载均衡、网络延迟，下面是自己个人观点的处理：</p><blockquote><ol><li>在节点宕机、网络延迟导致的数据响应丢失则可采用重试机制来进行处理，如果超过重试次数则人工干预</li><li>负载均衡上则依赖现有的项目架构网关策略调整、Nginx特殊路径调整等</li></ol></blockquote><h4 id="二-本场景中是基于不同数据库类型做的双写一致，借助消息中间件进行柔性分布式事务处理，完成数据最终一致性。"><a href="#二-本场景中是基于不同数据库类型做的双写一致，借助消息中间件进行柔性分布式事务处理，完成数据最终一致性。" class="headerlink" title="二. 本场景中是基于不同数据库类型做的双写一致，借助消息中间件进行柔性分布式事务处理，完成数据最终一致性。"></a>二. 本场景中是基于不同数据库类型做的双写一致，借助消息中间件进行柔性分布式事务处理，完成数据最终一致性。</h4><blockquote><p>在实现一上，数据的准确性偏向于Mongo端，因为在目前场景中其他Nodejs项目有对价格数据的读取还是会读取Mongo端，而MySQL只负责数据的变更顺便同步到Mongo，数据读取的准确端是在Mongo，所以在实现上数据变更优先调用NodeJs再用消息中间件对异常场景的发生来回滚已经变更的Mongo数据。——继续维护旧功能<br>在实现二上，数据的准确性则偏向于MySQL端，优先保证Java端业务执行没有问题，后面再发送MQ更新Mongo数据，发送成功则提交MySQL事务。对于NodeJs更新数据异常则交由消费者进行处理，在发送异常并超过重试次数上则进行人工干预手动修改数据。——偏向于随弃用旧功能</p></blockquote><h4 id="三-尽量避免分布式事务，如果能牺牲数据一致性达到最终一致性则进行选择柔性处理"><a href="#三-尽量避免分布式事务，如果能牺牲数据一致性达到最终一致性则进行选择柔性处理" class="headerlink" title="三. 尽量避免分布式事务，如果能牺牲数据一致性达到最终一致性则进行选择柔性处理"></a>三. 尽量避免分布式事务，如果能牺牲数据一致性达到最终一致性则进行选择柔性处理</h4><h3 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h3><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p><a href="https://mp.weixin.qq.com/s/yXl-LpuwwIbGMcHJDgx0Gw">万字长文漫谈分布式事务实现原理</a><br><a href="https://mp.weixin.qq.com/s/TAOF0y_QxJyIy8pbkjwFLw">一致性框架：供应链分布式事务问题解决方案｜得物技术</a></p><h4 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h4><p><a href="/file/%E5%80%9F%E5%8A%A9%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%9F%94%E6%80%A7%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Kafka%EF%BC%9A%E6%A0%B8%E5%BF%83%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%8E%9F%E7%90%86%5B%E6%9C%B1%E5%BF%A0%E5%8D%8E%5D.epub">深入理解Kafka：核心设计与实践原理[朱忠华]</a><br><a href="/file/%E5%80%9F%E5%8A%A9%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%9F%94%E6%80%A7%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%EF%BC%9A%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E6%88%98%E8%82%96%E5%AE%87%EF%BC%9B%E5%86%B0%E6%B2%B3.epub">深入理解分布式事务：原理与实战肖宇；冰河</a></p>]]></content>
    
    
    <categories>
      
      <category>技术学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>分布式事务</tag>
      
      <tag>数据最终一致性</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ElasticSearch之Script熔断异常</title>
    <link href="/2023/12/01/Elastic%20Search%E4%B9%8BScript%E7%86%94%E6%96%AD%E5%BC%82%E5%B8%B8/"/>
    <url>/2023/12/01/Elastic%20Search%E4%B9%8BScript%E7%86%94%E6%96%AD%E5%BC%82%E5%B8%B8/</url>
    
    <content type="html"><![CDATA[<!-- ![](/img/ElasticSearch之Script熔断异常/1.jpg) --><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>客服突然反馈，检索某个sku需要多次才能出现结果。</p><h3 id="排查思路-解决方案"><a href="#排查思路-解决方案" class="headerlink" title="排查思路&#x2F;解决方案"></a>排查思路&#x2F;解决方案</h3><p>1、这个sku处于下架状态，下架状态的sku是不允许检索的。结果查看数据处于上架状态，所以这个思路是错误的（×）</p><p>2、增加日志，打印ES查询语句，并添加查询ES错误栈信息打印。日志打印后，发现ES查询正常，但是抛出了异常：Elasticsearch exception [type&#x3D;search_phase_execution_exception, reason&#x3D;all shards failed]，看到这个错误后发现是ES分片出现异常可能是ES节点状态处于不健康状态，因为最近是黑五网一，对ES的复杂请求要比之间的流量要大至少一倍，所以怀疑是对ES的访问负载过高导致ES节点处于不健康状态。结果登录控制台查看发现是节点处于绿色状态（健康状态），第一时间懵了，但是看到ES对Http请求中有部分出现50X的访问异常，立马查看日志，日志如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs bash">[2023-11-21T02:25:13,005][WARN ][r.suppressed             ] [ff1a084489778d82a0ccf314aef5df98] path: __PATH__ params: &#123;typed_keys=<span class="hljs-literal">true</span>, max_concurrent_shard_requests=5, ignore_unavailable=<span class="hljs-literal">false</span>, expand_wildcards=open, allow_no_indices=<span class="hljs-literal">true</span>, ignore_throttled=<span class="hljs-literal">true</span>, index=index_product_3, search_type=query_then_fetch, batched_reduce_size=512, ccs_minimize_roundtrips=<span class="hljs-literal">true</span>&#125;<br><br>Failed to execute phase [query], all shards failed; shardFailures &#123;[4TJsxlKXT8io4YxAo1t3aw][index_product_3][0]: RemoteTransportException[[1f058616eb2ec8a3e231c3eee031132b][__IP__][__PATH__[__PATH__]]]; nested: GeneralScriptException[Failed to compile inline script [ int sortIndex = 0;<span class="hljs-keyword">if</span> (params._source.productCategoryVOList != null &amp;&amp; params._source.productCategoryVOList.size () &gt; 0) &#123;<span class="hljs-keyword">for</span>(int i = 0;i&lt;params._source.productCategoryVOList.size();i++)&#123;<span class="hljs-keyword">if</span>(params._source.productCategoryVOList.get(i).categoryId.equals(291)  &amp;&amp;  params._source.productCategoryVOList.get(i).level &gt; sortIndex ) &#123; sortIndex =  params._source.productCategoryVOList.get(i).level;&#125;&#125;&#125; <span class="hljs-built_in">return</span> sortIndex;] using lang [painless]]; nested: CircuitBreakingException[[script] Too many dynamic script compilations within, max: [__PATH__]; please use indexed, or scripts with parameters instead; this <span class="hljs-built_in">limit</span> can be changed by the [script.context.number_sort.max_compilations_rate] setting]; &#125;<br><br>at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:568)<br><br>at org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:324)<br><br>at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:603)<br><br>at org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:400)<br><br>at org.elasticsearch.action.search.AbstractSearchAsyncAction.access<span class="hljs-variable">$100</span>(AbstractSearchAsyncAction.java:70)<br><br>at org.elasticsearch.action.search.AbstractSearchAsyncAction<span class="hljs-variable">$1</span>.onFailure(AbstractSearchAsyncAction.java:258)<br><br>at org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73)<br><br>at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59)<br><br>at org.elasticsearch.action.search.SearchTransportService<span class="hljs-variable">$ConnectionCountingHandler</span>.handleException(SearchTransportService.java:408)<br><br>at org.elasticsearch.transport.TransportService<span class="hljs-variable">$6</span>.handleException(TransportService.java:640)<br><br>at org.elasticsearch.transport.TransportService<span class="hljs-variable">$ContextRestoreResponseHandler</span>.handleException(TransportService.java:1181)<br><br>at org.elasticsearch.transport.InboundHandler.lambda$handleException<span class="hljs-variable">$3</span>(InboundHandler.java:277)<br><br>at org.elasticsearch.common.util.concurrent.EsExecutors<span class="hljs-variable">$DirectExecutorService</span>.execute(EsExecutors.java:253)<br><br>at org.elasticsearch.transport.InboundHandler.handleException(InboundHandler.java:275)<br><br>at org.elasticsearch.transport.InboundHandler.handlerResponseError(InboundHandler.java:267)<br><br>at org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:131)<br><br>at org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:89)<br><br>at org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:700)<br><br>at org.elasticsearch.transport.InboundPipeline.forwardFragments(InboundPipeline.java:142)<br><br>at org.elasticsearch.transport.InboundPipeline.doHandleBytes(InboundPipeline.java:117)<br><br>at org.elasticsearch.transport.InboundPipeline.handleBytes(InboundPipeline.java:82)<br><br>at org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:74)<br><br>at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)<br><br>at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)<br><br>at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)<br><br>at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:271)<br><br>at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)<br><br>at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)<br><br>at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)<br><br>at io.netty.channel.DefaultChannelPipeline<span class="hljs-variable">$HeadContext</span>.channelRead(DefaultChannelPipeline.java:1410)<br><br>at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)<br><br>at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)<br><br>at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)<br><br>at io.netty.channel.nio.AbstractNioByteChannel<span class="hljs-variable">$NioByteUnsafe</span>.<span class="hljs-built_in">read</span>(AbstractNioByteChannel.java:163)<br><br>at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)<br><br>at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615)<br><br>at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578)<br><br>at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)<br><br>at io.netty.util.concurrent.SingleThreadEventExecutor<span class="hljs-variable">$4</span>.run(SingleThreadEventExecutor.java:989)<br><br>at io.netty.util.internal.ThreadExecutorMap<span class="hljs-variable">$2</span>.run(ThreadExecutorMap.java:74)<br><br>at __PATH__(Thread.java:829)<br><br>Caused by: CircuitBreakingException[[script] Too many dynamic script compilations within, max: [__PATH__]; please use indexed, or scripts with parameters instead; this <span class="hljs-built_in">limit</span> can be changed by the [script.context.number_sort.max_compilations_rate] setting]<br><br>at org.elasticsearch.script.ScriptCache.checkCompilationLimit(ScriptCache.java:179)<br><br>at org.elasticsearch.script.ScriptCache.lambda$compile<span class="hljs-variable">$0</span>(ScriptCache.java:109)<br><br>at org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433)<br><br>at org.elasticsearch.script.ScriptCache.compile(ScriptCache.java:99)<br><br>at org.elasticsearch.script.ScriptService.compile(ScriptService.java:384)<br><br>at org.elasticsearch.index.query.QueryShardContext.compile(QueryShardContext.java:401)<br><br>at org.elasticsearch.search.sort.ScriptSortBuilder.fieldComparatorSource(ScriptSortBuilder.java:380)<br><br>at org.elasticsearch.search.sort.ScriptSortBuilder.build(ScriptSortBuilder.java:312)<br><br>at org.elasticsearch.search.sort.SortBuilder.buildSort(SortBuilder.java:159)<br><br>at org.elasticsearch.search.SearchService.parseSource(SearchService.java:906)<br><br>at org.elasticsearch.search.SearchService.createContext(SearchService.java:726)<br><br>at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:428)<br><br>at org.elasticsearch.search.SearchService.access<span class="hljs-variable">$500</span>(SearchService.java:141)<br><br>at org.elasticsearch.search.SearchService<span class="hljs-variable">$2</span>.lambda$onResponse<span class="hljs-variable">$0</span>(SearchService.java:401)<br><br>at org.elasticsearch.action.ActionRunnable.lambda$supply<span class="hljs-variable">$0</span>(ActionRunnable.java:58)<br><br>at org.elasticsearch.action.ActionRunnable<span class="hljs-variable">$2</span>.doRun(ActionRunnable.java:73)<br><br>at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)<br><br>at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44)<br><br>at org.elasticsearch.common.util.concurrent.ThreadContext<span class="hljs-variable">$ContextPreservingAbstractRunnable</span>.doRun(ThreadContext.java:752)<br><br>at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)<br><br>at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)<br><br>at java.util.concurrent.ThreadPoolExecutor<span class="hljs-variable">$Worker</span>.run(ThreadPoolExecutor.java:628)<br><br>at java.lang.Thread.run(Thread.java:829)<br><br>[2023-11-21T02:25:13,005][WARN ][r.suppressed ] [ff1a084489778d82a0ccf314aef5df98] path: __PATH__ params: &#123;typed_keys=<span class="hljs-literal">true</span>, max_concurrent_shard_requests=5, ignore_unavailable=<span class="hljs-literal">false</span>, expand_wildcards=open, allow_no_indices=<span class="hljs-literal">true</span>, ignore_throttled=<span class="hljs-literal">true</span>, index=index_product_3, search_type=query_then_fetch, batched_reduce_size=512, ccs_minimize_roundtrips=<span class="hljs-literal">true</span>&#125; Failed to execute phase [query], all shards failed; shardFailures &#123;[4TJsxlKXT8io4YxAo1t3aw][index_product_3][0]: RemoteTransportException[[1f058616eb2ec8a3e231c3eee031132b][__IP__][__PATH__[__PATH__]]]; nested: GeneralScriptException[Failed to compile inline script [ int sortIndex = 0;<span class="hljs-keyword">if</span> (params._source.productCategoryVOList != null &amp;&amp; params._source.productCategoryVOList.size () &gt; 0) &#123;<span class="hljs-keyword">for</span>(int i = 0;i&lt;params._source.productCategoryVOList.size();i++)&#123;<span class="hljs-keyword">if</span>(params._source.productCategoryVOList.get(i).categoryId.equals(291) &amp;&amp; params._source.productCategoryVOList.get(i).level &gt; sortIndex ) &#123; sortIndex = params._source.productCategoryVOList.get(i).level;&#125;&#125;&#125; <span class="hljs-built_in">return</span> sortIndex;] using lang [painless]]; nested: CircuitBreakingException[[script] Too many dynamic script compilations within, max: [__PATH__]; please use indexed, or scripts with parameters instead; this <span class="hljs-built_in">limit</span> can be changed by the [script.context.number_sort.max_compilations_rate] setting]; &#125; at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseFailure(AbstractSearchAsyncAction.java:568) at org.elasticsearch.action.search.AbstractSearchAsyncAction.executeNextPhase(AbstractSearchAsyncAction.java:324) at org.elasticsearch.action.search.AbstractSearchAsyncAction.onPhaseDone(AbstractSearchAsyncAction.java:603) at org.elasticsearch.action.search.AbstractSearchAsyncAction.onShardFailure(AbstractSearchAsyncAction.java:400) at org.elasticsearch.action.search.AbstractSearchAsyncAction.access<span class="hljs-variable">$100</span>(AbstractSearchAsyncAction.java:70) at org.elasticsearch.action.search.AbstractSearchAsyncAction<span class="hljs-variable">$1</span>.onFailure(AbstractSearchAsyncAction.java:258) at org.elasticsearch.action.search.SearchExecutionStatsCollector.onFailure(SearchExecutionStatsCollector.java:73) at org.elasticsearch.action.ActionListenerResponseHandler.handleException(ActionListenerResponseHandler.java:59) at org.elasticsearch.action.search.SearchTransportService<span class="hljs-variable">$ConnectionCountingHandler</span>.handleException(SearchTransportService.java:408) at org.elasticsearch.transport.TransportService<span class="hljs-variable">$6</span>.handleException(TransportService.java:640) at org.elasticsearch.transport.TransportService<span class="hljs-variable">$ContextRestoreResponseHandler</span>.handleException(TransportService.java:1181) at org.elasticsearch.transport.InboundHandler.lambda$handleException<span class="hljs-variable">$3</span>(InboundHandler.java:277) at org.elasticsearch.common.util.concurrent.EsExecutors<span class="hljs-variable">$DirectExecutorService</span>.execute(EsExecutors.java:253) at org.elasticsearch.transport.InboundHandler.handleException(InboundHandler.java:275) at org.elasticsearch.transport.InboundHandler.handlerResponseError(InboundHandler.java:267) at org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:131) at org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:89) at org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:700) at org.elasticsearch.transport.InboundPipeline.forwardFragments(InboundPipeline.java:142) at org.elasticsearch.transport.InboundPipeline.doHandleBytes(InboundPipeline.java:117) at org.elasticsearch.transport.InboundPipeline.handleBytes(InboundPipeline.java:82) at org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:74) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) at io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:271) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) at io.netty.channel.DefaultChannelPipeline<span class="hljs-variable">$HeadContext</span>.channelRead(DefaultChannelPipeline.java:1410) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) at io.netty.channel.nio.AbstractNioByteChannel<span class="hljs-variable">$NioByteUnsafe</span>.<span class="hljs-built_in">read</span>(AbstractNioByteChannel.java:163) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) at io.netty.util.concurrent.SingleThreadEventExecutor<span class="hljs-variable">$4</span>.run(SingleThreadEventExecutor.java:989) at io.netty.util.internal.ThreadExecutorMap<span class="hljs-variable">$2</span>.run(ThreadExecutorMap.java:74) at __PATH__(Thread.java:829) Caused by: CircuitBreakingException[[script] Too many dynamic script compilations within, max: [__PATH__]; please use indexed, or scripts with parameters instead; this <span class="hljs-built_in">limit</span> can be changed by the [script.context.number_sort.max_compilations_rate] setting] at org.elasticsearch.script.ScriptCache.checkCompilationLimit(ScriptCache.java:179) at org.elasticsearch.script.ScriptCache.lambda$compile<span class="hljs-variable">$0</span>(ScriptCache.java:109) at org.elasticsearch.common.cache.Cache.computeIfAbsent(Cache.java:433) at org.elasticsearch.script.ScriptCache.compile(ScriptCache.java:99) at org.elasticsearch.script.ScriptService.compile(ScriptService.java:384) at org.elasticsearch.index.query.QueryShardContext.compile(QueryShardContext.java:401) at org.elasticsearch.search.sort.ScriptSortBuilder.fieldComparatorSource(ScriptSortBuilder.java:380) at org.elasticsearch.search.sort.ScriptSortBuilder.build(ScriptSortBuilder.java:312) at org.elasticsearch.search.sort.SortBuilder.buildSort(SortBuilder.java:159) at org.elasticsearch.search.SearchService.parseSource(SearchService.java:906) at org.elasticsearch.search.SearchService.createContext(SearchService.java:726) at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:428) at org.elasticsearch.search.SearchService.access<span class="hljs-variable">$500</span>(SearchService.java:141) at org.elasticsearch.search.SearchService<span class="hljs-variable">$2</span>.lambda$onResponse<span class="hljs-variable">$0</span>(SearchService.java:401) at org.elasticsearch.action.ActionRunnable.lambda$supply<span class="hljs-variable">$0</span>(ActionRunnable.java:58) at org.elasticsearch.action.ActionRunnable<span class="hljs-variable">$2</span>.doRun(ActionRunnable.java:73) at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) at org.elasticsearch.common.util.concurrent.TimedRunnable.doRun(TimedRunnable.java:44) at org.elasticsearch.common.util.concurrent.ThreadContext<span class="hljs-variable">$ContextPreservingAbstractRunnable</span>.doRun(ThreadContext.java:752) at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.util.concurrent.ThreadPoolExecutor<span class="hljs-variable">$Worker</span>.run(ThreadPoolExecutor.java:628) at java.lang.Thread.run(Thread.java:829)<br><br></code></pre></td></tr></table></figure><blockquote><p>核心错误日志</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Caused by: CircuitBreakingException[[script] Too many dynamic script compilations within, max: [__PATH__]; please use indexed, or scripts with parameters instead; this <span class="hljs-built_in">limit</span> can be changed by the [script.context.number_sort.max_compilations_rate] setting]<br></code></pre></td></tr></table></figure><p>发现是ES出现了内存熔断——Script 编译熔断。由于在系统中有多个页面用到ES的检索，其中包含购物车推荐商品、推广详情页、商品详情推荐商品以及其他活动逻辑页配置的商品列表，而获取这些商品列表中有用到Script脚本去做复杂逻辑的脚本排序，而在ES中Script编译熔断的作用是限制一段时间内 Script 编译次数，而默认值是75&#x2F;5m( es第一次获取到script时会进行编译并缓存。Tips：使用 params 参数化脚本而不是写死到脚本中)，即5分钟编译75次，当超过75此后则抛出上面异常。<br>查询出这个问题后，立马修改了script.context.number_sort.max_compilations_rate的值，后发现异常堆栈信息消失，异常解决。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>此次异常的出现是对【ES内存以及熔断】不够了解，ES基于保护机制而设置了多种熔断机制，其中包含：</p><ul><li>Field data 熔断器</li><li>Request 熔断器</li><li>In flight requests 熔断器</li><li>Accounting requests 熔断器</li><li>Script 编译熔断器</li><li>Regex 熔断器<br>详细可以查看：<a href="https://blog.csdn.net/qq_16164711/article/details/120709299">https://blog.csdn.net/qq_16164711/article/details/120709299</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Elastic Search</tag>
      
      <tag>线上BUG</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
